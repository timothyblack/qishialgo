"""
https://www.lintcode.com/problem/k-diff-pairs-in-an-array/description
1187. K-diff Pairs in an Array
中文English
Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.

Example
Example 1:

Input: [3, 1, 4, 1, 5], k = 2
Output: 2
Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
Although we have two 1s in the input, we should only return the number of unique pairs.
Example 2:

Input:[1, 2, 3, 4, 5], k = 1
Output: 4
Explanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).
Example 3:

Input: [1, 3, 1, 5, 4], k = 0
Output: 1
Explanation: There is one 0-diff pair in the array, (1, 1).
Notice
1.The pairs (i, j) and (j, i) count as the same pair.
2.The length of the array won't exceed 10,000.
3.All the integers in the given input belong to the range: [-1e7, 1e7].


https://www.jiuzhang.com/solution/k-diff-pairs-in-an-array/#tag-other-lang-python

# solution is sort + two pointer
"""


class Solution:
    """
    @param nums: an array of integers
    @param k: an integer
    @return: the number of unique k-diff pairs
    """
    #  k == 0 and other cases  
    # Time: O(N), Space: O(N)
    def findPairs(self, nums, k):
        # hash 
        res = 0 
        if k == 0: # look for same numbers diff = 0   
            counter = {} 
            
            for num in nums: 
                if num not in counter:
                    counter[num] = 0 
                counter[num] += 1 
                if counter[num] == 2:
                    res += 1 
            return res 
        # two sum hash 
        s = set(nums)
        for num in s:
            if num + k in s:
                res += 1 
        return res
                
        
